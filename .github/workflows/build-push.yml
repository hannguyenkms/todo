name: Build and Push Docker Images

on:
  push:
    branches: master

env:
  REGION: asia-northeast1
  PROJECT: hazel-chiller-461303-m9
  REPO: master
  IMAGE_NAME: todo-app

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set vars
        run: echo "IMAGE_TAG=$REGION-docker.pkg.dev/$PROJECT/$REPO/$IMAGE_NAME" >> $GITHUB_ENV

      - name: Google Cloud Login
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GC_IMAGE_MANAGER_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Docker auth
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Auth Service
      - name: Build and push auth-service
        uses: docker/build-push-action@v5
        with:
          context: ./auth-service
          push: true
          tags: ${{ env.IMAGE_TAG }}/auth-service # todo-app/auth-service
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # User/Profile Service
      - name: Build and push profile-Service
        uses: docker/build-push-action@v5
        with:
          context: ./profile-service
          push: true
          tags: ${{ env.IMAGE_TAG }}/profile-service
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Task Service
      - name: Build and push task-service
        uses: docker/build-push-action@v5
        with:
          context: ./task-service
          push: true
          tags: ${{ env.IMAGE_TAG }}/task-service
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Frontend
      - name: Build and push todo-fe
        uses: docker/build-push-action@v5
        with:
          context: ./todo-fe
          push: true
          tags: ${{ env.IMAGE_TAG }}/todo-fe
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Fix provider permissions
        run: |
          chmod +x .terraform/providers/registry.terraform.io/hashicorp/google/*/*/terraform-provider-google_*
        working-directory: ./terraform

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var="image_tag=${{ github.ref_name }}" -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan